// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZswBlog.Entity.DbContext;

namespace ZswBlog.Core.Migrations
{
    [DbContext(typeof(ZswBlogDbContext))]
    partial class ZswBlogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZswBlog.DTO.ArticleDTO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("coverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isTop")
                        .HasColumnType("bit");

                    b.Property<DateTime>("lastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("like")
                        .HasColumnType("int");

                    b.Property<int>("operatorId")
                        .HasColumnType("int");

                    b.Property<int>("readTime")
                        .HasColumnType("int");

                    b.Property<int>("textCount")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("topSort")
                        .HasColumnType("int");

                    b.Property<int>("visits")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("ArticleDTO");
                });

            modelBuilder.Entity("ZswBlog.DTO.CommentDTO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("articleId")
                        .HasColumnType("int");

                    b.Property<string>("browser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("targetId")
                        .HasColumnType("int");

                    b.Property<int>("targetUserId")
                        .HasColumnType("int");

                    b.Property<string>("targetUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("targetUserPortrait")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userPortrait")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CommentDTO");
                });

            modelBuilder.Entity("ZswBlog.DTO.MessageDTO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("browser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("targetUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("targetUserPortrait")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userPortrait")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("MessageDTO");
                });

            modelBuilder.Entity("ZswBlog.Entity.ActionLogEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("actionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("actionUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("logType")
                        .HasColumnType("int");

                    b.Property<string>("moduleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operatorId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tab_actionlog");
                });

            modelBuilder.Entity("ZswBlog.Entity.AnnouncementEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("endPushDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isShow")
                        .HasColumnType("bit");

                    b.Property<bool>("isTop")
                        .HasColumnType("bit");

                    b.Property<int>("operatorId")
                        .HasColumnType("int");

                    b.Property<int>("sort")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tab_announcement");
                });

            modelBuilder.Entity("ZswBlog.Entity.ArticleEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("coverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isShow")
                        .HasColumnType("bit");

                    b.Property<bool>("isTop")
                        .HasColumnType("bit");

                    b.Property<DateTime>("lastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("like")
                        .HasColumnType("int");

                    b.Property<int>("operatorId")
                        .HasColumnType("int");

                    b.Property<int>("readTime")
                        .HasColumnType("int");

                    b.Property<int>("textCount")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("topSort")
                        .HasColumnType("int");

                    b.Property<int>("visits")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoryId");

                    b.ToTable("tab_article");
                });

            modelBuilder.Entity("ZswBlog.Entity.ArticleTagEntity", b =>
                {
                    b.Property<int>("articleId")
                        .HasColumnType("int");

                    b.Property<int>("tagId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("operatorId")
                        .HasColumnType("int");

                    b.HasKey("articleId", "tagId");

                    b.HasIndex("tagId");

                    b.ToTable("tab_middle_article_tag");
                });

            modelBuilder.Entity("ZswBlog.Entity.CategoryEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("operatorId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tab_category");
                });

            modelBuilder.Entity("ZswBlog.Entity.CommentEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("articleId")
                        .HasColumnType("int");

                    b.Property<string>("browser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isShow")
                        .HasColumnType("bit");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("targetId")
                        .HasColumnType("int");

                    b.Property<int?>("targetUserId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("targetUserId");

                    b.HasIndex("userId");

                    b.ToTable("tab_comment");
                });

            modelBuilder.Entity("ZswBlog.Entity.FileAttachmentEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fileExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("operatorId")
                        .HasColumnType("int");

                    b.Property<string>("path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tab_file_attachment");
                });

            modelBuilder.Entity("ZswBlog.Entity.FriendLinkEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isShow")
                        .HasColumnType("bit");

                    b.Property<int>("operatorId")
                        .HasColumnType("int");

                    b.Property<string>("portrait")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("src")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tab_friendlink");
                });

            modelBuilder.Entity("ZswBlog.Entity.MessageEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("browser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isShow")
                        .HasColumnType("bit");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("targetId")
                        .HasColumnType("int");

                    b.Property<int?>("targetUserId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("targetUserId");

                    b.HasIndex("userId");

                    b.ToTable("tab_message");
                });

            modelBuilder.Entity("ZswBlog.Entity.QQUserInfoEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("figureurl_qq_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("openId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("tab_qq_userinfo");
                });

            modelBuilder.Entity("ZswBlog.Entity.SiteTagEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isShow")
                        .HasColumnType("bit");

                    b.Property<int>("like")
                        .HasColumnType("int");

                    b.Property<int>("operatorId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tab_sitetag");
                });

            modelBuilder.Entity("ZswBlog.Entity.TagEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("operatorId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tab_tag");
                });

            modelBuilder.Entity("ZswBlog.Entity.TimeLineEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("operatorId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tab_timeline");
                });

            modelBuilder.Entity("ZswBlog.Entity.TravelEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("createBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isShow")
                        .HasColumnType("bit");

                    b.Property<int>("operatorId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tab_travel");
                });

            modelBuilder.Entity("ZswBlog.Entity.TravelFileAttachmentEntity", b =>
                {
                    b.Property<int>("travelId")
                        .HasColumnType("int");

                    b.Property<int>("fileAttachmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("operatorId")
                        .HasColumnType("int");

                    b.HasKey("travelId", "fileAttachmentId");

                    b.HasIndex("fileAttachmentId");

                    b.ToTable("tab_middle_travel_file_attachment");
                });

            modelBuilder.Entity("ZswBlog.Entity.UserEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("disabled")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("lastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("loginCount")
                        .HasColumnType("int");

                    b.Property<string>("loginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("loginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("nickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("portrait")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tab_user");
                });

            modelBuilder.Entity("ZswBlog.Entity.ArticleEntity", b =>
                {
                    b.HasOne("ZswBlog.Entity.CategoryEntity", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("ZswBlog.Entity.ArticleTagEntity", b =>
                {
                    b.HasOne("ZswBlog.Entity.ArticleEntity", "article")
                        .WithMany("articleTags")
                        .HasForeignKey("articleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZswBlog.Entity.TagEntity", "tag")
                        .WithMany("articleTags")
                        .HasForeignKey("tagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("article");

                    b.Navigation("tag");
                });

            modelBuilder.Entity("ZswBlog.Entity.CommentEntity", b =>
                {
                    b.HasOne("ZswBlog.Entity.UserEntity", "targetUser")
                        .WithMany()
                        .HasForeignKey("targetUserId");

                    b.HasOne("ZswBlog.Entity.UserEntity", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("targetUser");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ZswBlog.Entity.MessageEntity", b =>
                {
                    b.HasOne("ZswBlog.Entity.UserEntity", "targetUser")
                        .WithMany()
                        .HasForeignKey("targetUserId");

                    b.HasOne("ZswBlog.Entity.UserEntity", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("targetUser");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ZswBlog.Entity.QQUserInfoEntity", b =>
                {
                    b.HasOne("ZswBlog.Entity.UserEntity", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ZswBlog.Entity.TravelFileAttachmentEntity", b =>
                {
                    b.HasOne("ZswBlog.Entity.FileAttachmentEntity", "fileAttachment")
                        .WithMany("travelFileAttachments")
                        .HasForeignKey("fileAttachmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZswBlog.Entity.TravelEntity", "travel")
                        .WithMany("imgList")
                        .HasForeignKey("travelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("fileAttachment");

                    b.Navigation("travel");
                });

            modelBuilder.Entity("ZswBlog.Entity.ArticleEntity", b =>
                {
                    b.Navigation("articleTags");
                });

            modelBuilder.Entity("ZswBlog.Entity.FileAttachmentEntity", b =>
                {
                    b.Navigation("travelFileAttachments");
                });

            modelBuilder.Entity("ZswBlog.Entity.TagEntity", b =>
                {
                    b.Navigation("articleTags");
                });

            modelBuilder.Entity("ZswBlog.Entity.TravelEntity", b =>
                {
                    b.Navigation("imgList");
                });
#pragma warning restore 612, 618
        }
    }
}
